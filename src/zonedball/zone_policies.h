// This file was generated by the following script:
//
//   $ /home/brian/src/AceTimeSuite/compiler/src/acetimecompiler/tzcompiler.py
//     --input_dir /home/brian/src/AceTimeSuite/libraries/acetimec/src/zonedball/tzfiles
//     --output_dir /home/brian/src/AceTimeSuite/libraries/acetimec/src/zonedball
//     --tz_version 2025b
//     --actions zonedb
//     --languages c
//     --scope complete
//     --db_namespace AtcAll
//     --start_year 1800
//     --until_year 2200
//     --nocompress
//
// using the TZ Database files
//
//   africa
//   antarctica
//   asia
//   australasia
//   backward
//   etcetera
//   europe
//   northamerica
//   southamerica
//
// from https://github.com/eggert/tz/releases/tag/2025b
//
// Supported Zones: 597 (340 zones, 257 links)
// Unsupported Zones: 0 (0 zones, 0 links)
//
// Requested Years: [1800,2200]
// Accurate Years: [-32767,32767]
//
// Original Years:  [1844,2087]
// Generated Years: [1844,2087]
// Lower/Upper Truncated: [False,False]
//
// Estimator Years: [1800,2090]
// Max Buffer Size: 8
//
// Records:
//   Infos: 597
//   Eras: 1956
//   Policies: 134
//   Rules: 2235
//
// Memory (8-bits):
//   Context: 16
//   Rules: 26820
//   Policies: 402
//   Eras: 29340
//   Zones: 4420
//   Links: 3341
//   Registry: 1194
//   Formats: 486
//   Letters: 160
//   Fragments: 0
//   Names: 9094 (original: 9094)
//   TOTAL: 75273
//
// Memory (32-bits):
//   Context: 24
//   Rules: 26820
//   Policies: 1072
//   Eras: 39120
//   Zones: 8160
//   Links: 6168
//   Registry: 2388
//   Formats: 486
//   Letters: 216
//   Fragments: 0
//   Names: 9094 (original: 9094)
//   TOTAL: 93548
//
// DO NOT EDIT

#ifndef ACE_TIME_C_ZONEDB_ATCALL_ZONE_POLICIES_H
#define ACE_TIME_C_ZONEDB_ATCALL_ZONE_POLICIES_H

#include "../zoneinfo/zone_info.h"

#ifdef __cplusplus
extern "C" {
#endif

//---------------------------------------------------------------------------
// Supported policies: 134
//---------------------------------------------------------------------------

extern const AtcZonePolicy kAtcAllZonePolicyAN;
extern const AtcZonePolicy kAtcAllZonePolicyAQ;
extern const AtcZonePolicy kAtcAllZonePolicyAS;
extern const AtcZonePolicy kAtcAllZonePolicyAT;
extern const AtcZonePolicy kAtcAllZonePolicyAV;
extern const AtcZonePolicy kAtcAllZonePolicyAW;
extern const AtcZonePolicy kAtcAllZonePolicyAlbania;
extern const AtcZonePolicy kAtcAllZonePolicyAlgeria;
extern const AtcZonePolicy kAtcAllZonePolicyArg;
extern const AtcZonePolicy kAtcAllZonePolicyArmenia;
extern const AtcZonePolicy kAtcAllZonePolicyAus;
extern const AtcZonePolicy kAtcAllZonePolicyAustria;
extern const AtcZonePolicy kAtcAllZonePolicyAzer;
extern const AtcZonePolicy kAtcAllZonePolicyBarb;
extern const AtcZonePolicy kAtcAllZonePolicyBelgium;
extern const AtcZonePolicy kAtcAllZonePolicyBelize;
extern const AtcZonePolicy kAtcAllZonePolicyBermuda;
extern const AtcZonePolicy kAtcAllZonePolicyBrazil;
extern const AtcZonePolicy kAtcAllZonePolicyBulg;
extern const AtcZonePolicy kAtcAllZonePolicyC_Eur;
extern const AtcZonePolicy kAtcAllZonePolicyCA;
extern const AtcZonePolicy kAtcAllZonePolicyCO;
extern const AtcZonePolicy kAtcAllZonePolicyCR;
extern const AtcZonePolicy kAtcAllZonePolicyCanada;
extern const AtcZonePolicy kAtcAllZonePolicyChatham;
extern const AtcZonePolicy kAtcAllZonePolicyChicago;
extern const AtcZonePolicy kAtcAllZonePolicyChile;
extern const AtcZonePolicy kAtcAllZonePolicyCook;
extern const AtcZonePolicy kAtcAllZonePolicyCuba;
extern const AtcZonePolicy kAtcAllZonePolicyCyprus;
extern const AtcZonePolicy kAtcAllZonePolicyCzech;
extern const AtcZonePolicy kAtcAllZonePolicyDR;
extern const AtcZonePolicy kAtcAllZonePolicyDenver;
extern const AtcZonePolicy kAtcAllZonePolicyDetroit;
extern const AtcZonePolicy kAtcAllZonePolicyDhaka;
extern const AtcZonePolicy kAtcAllZonePolicyE_Eur;
extern const AtcZonePolicy kAtcAllZonePolicyE_EurAsia;
extern const AtcZonePolicy kAtcAllZonePolicyEU;
extern const AtcZonePolicy kAtcAllZonePolicyEUAsia;
extern const AtcZonePolicy kAtcAllZonePolicyEcuador;
extern const AtcZonePolicy kAtcAllZonePolicyEdm;
extern const AtcZonePolicy kAtcAllZonePolicyEgypt;
extern const AtcZonePolicy kAtcAllZonePolicyEgyptAsia;
extern const AtcZonePolicy kAtcAllZonePolicyEire;
extern const AtcZonePolicy kAtcAllZonePolicyFalk;
extern const AtcZonePolicy kAtcAllZonePolicyFiji;
extern const AtcZonePolicy kAtcAllZonePolicyFinland;
extern const AtcZonePolicy kAtcAllZonePolicyFrance;
extern const AtcZonePolicy kAtcAllZonePolicyGB_Eire;
extern const AtcZonePolicy kAtcAllZonePolicyGermany;
extern const AtcZonePolicy kAtcAllZonePolicyGreece;
extern const AtcZonePolicy kAtcAllZonePolicyGuam;
extern const AtcZonePolicy kAtcAllZonePolicyGuat;
extern const AtcZonePolicy kAtcAllZonePolicyHK;
extern const AtcZonePolicy kAtcAllZonePolicyHaiti;
extern const AtcZonePolicy kAtcAllZonePolicyHalifax;
extern const AtcZonePolicy kAtcAllZonePolicyHoliday;
extern const AtcZonePolicy kAtcAllZonePolicyHond;
extern const AtcZonePolicy kAtcAllZonePolicyHungary;
extern const AtcZonePolicy kAtcAllZonePolicyIndianapolis;
extern const AtcZonePolicy kAtcAllZonePolicyIran;
extern const AtcZonePolicy kAtcAllZonePolicyIraq;
extern const AtcZonePolicy kAtcAllZonePolicyItaly;
extern const AtcZonePolicy kAtcAllZonePolicyJapan;
extern const AtcZonePolicy kAtcAllZonePolicyJordan;
extern const AtcZonePolicy kAtcAllZonePolicyKyrgyz;
extern const AtcZonePolicy kAtcAllZonePolicyLH;
extern const AtcZonePolicy kAtcAllZonePolicyLatvia;
extern const AtcZonePolicy kAtcAllZonePolicyLebanon;
extern const AtcZonePolicy kAtcAllZonePolicyLibya;
extern const AtcZonePolicy kAtcAllZonePolicyLouisville;
extern const AtcZonePolicy kAtcAllZonePolicyMacau;
extern const AtcZonePolicy kAtcAllZonePolicyMalta;
extern const AtcZonePolicy kAtcAllZonePolicyMarengo;
extern const AtcZonePolicy kAtcAllZonePolicyMauritius;
extern const AtcZonePolicy kAtcAllZonePolicyMenominee;
extern const AtcZonePolicy kAtcAllZonePolicyMexico;
extern const AtcZonePolicy kAtcAllZonePolicyMoldova;
extern const AtcZonePolicy kAtcAllZonePolicyMoncton;
extern const AtcZonePolicy kAtcAllZonePolicyMongol;
extern const AtcZonePolicy kAtcAllZonePolicyMorocco;
extern const AtcZonePolicy kAtcAllZonePolicyNBorneo;
extern const AtcZonePolicy kAtcAllZonePolicyNC;
extern const AtcZonePolicy kAtcAllZonePolicyNT_YK;
extern const AtcZonePolicy kAtcAllZonePolicyNYC;
extern const AtcZonePolicy kAtcAllZonePolicyNZ;
extern const AtcZonePolicy kAtcAllZonePolicyNamibia;
extern const AtcZonePolicy kAtcAllZonePolicyNic;
extern const AtcZonePolicy kAtcAllZonePolicyPRC;
extern const AtcZonePolicy kAtcAllZonePolicyPakistan;
extern const AtcZonePolicy kAtcAllZonePolicyPalestine;
extern const AtcZonePolicy kAtcAllZonePolicyPara;
extern const AtcZonePolicy kAtcAllZonePolicyPerry;
extern const AtcZonePolicy kAtcAllZonePolicyPeru;
extern const AtcZonePolicy kAtcAllZonePolicyPhil;
extern const AtcZonePolicy kAtcAllZonePolicyPike;
extern const AtcZonePolicy kAtcAllZonePolicyPoland;
extern const AtcZonePolicy kAtcAllZonePolicyPort;
extern const AtcZonePolicy kAtcAllZonePolicyPulaski;
extern const AtcZonePolicy kAtcAllZonePolicyROK;
extern const AtcZonePolicy kAtcAllZonePolicyRegina;
extern const AtcZonePolicy kAtcAllZonePolicyRomania;
extern const AtcZonePolicy kAtcAllZonePolicyRussia;
extern const AtcZonePolicy kAtcAllZonePolicyRussiaAsia;
extern const AtcZonePolicy kAtcAllZonePolicySA;
extern const AtcZonePolicy kAtcAllZonePolicySalv;
extern const AtcZonePolicy kAtcAllZonePolicySanLuis;
extern const AtcZonePolicy kAtcAllZonePolicyShang;
extern const AtcZonePolicy kAtcAllZonePolicySovietZone;
extern const AtcZonePolicy kAtcAllZonePolicySpain;
extern const AtcZonePolicy kAtcAllZonePolicySpainAfrica;
extern const AtcZonePolicy kAtcAllZonePolicyStJohns;
extern const AtcZonePolicy kAtcAllZonePolicyStarke;
extern const AtcZonePolicy kAtcAllZonePolicySudan;
extern const AtcZonePolicy kAtcAllZonePolicySwift;
extern const AtcZonePolicy kAtcAllZonePolicySwiss;
extern const AtcZonePolicy kAtcAllZonePolicySyria;
extern const AtcZonePolicy kAtcAllZonePolicyTaiwan;
extern const AtcZonePolicy kAtcAllZonePolicyThule;
extern const AtcZonePolicy kAtcAllZonePolicyTonga;
extern const AtcZonePolicy kAtcAllZonePolicyToronto;
extern const AtcZonePolicy kAtcAllZonePolicyTroll;
extern const AtcZonePolicy kAtcAllZonePolicyTunisia;
extern const AtcZonePolicy kAtcAllZonePolicyTurkey;
extern const AtcZonePolicy kAtcAllZonePolicyUS;
extern const AtcZonePolicy kAtcAllZonePolicyUruguay;
extern const AtcZonePolicy kAtcAllZonePolicyVanc;
extern const AtcZonePolicy kAtcAllZonePolicyVanuatu;
extern const AtcZonePolicy kAtcAllZonePolicyVincennes;
extern const AtcZonePolicy kAtcAllZonePolicyW_Eur;
extern const AtcZonePolicy kAtcAllZonePolicyWS;
extern const AtcZonePolicy kAtcAllZonePolicyWinn;
extern const AtcZonePolicy kAtcAllZonePolicyYukon;
extern const AtcZonePolicy kAtcAllZonePolicyZion;


//---------------------------------------------------------------------------
// Unsupported zone policies: 0
//---------------------------------------------------------------------------



//---------------------------------------------------------------------------
// Notable zone policies: 27
//---------------------------------------------------------------------------

// Barb {SAVE '0:30' different from 1:00}
// Belize {
//   LETTER '-0530' not single character,
//   LETTER 'CDT' not single character,
//   LETTER 'CPT' not single character,
//   LETTER 'CST' not single character,
//   LETTER 'CWT' not single character,
//   SAVE '0:30' different from 1:00,
// }
// CA {AT '2:01' not multiple of :15 min}
// Cook {SAVE '0:30' different from 1:00}
// DR {
//   LETTER '-0430' not single character,
//   LETTER 'EDT' not single character,
//   LETTER 'EST' not single character,
//   SAVE '0:30' different from 1:00,
// }
// Eire {SAVE '-1:00' is a negative DST}
// France {SAVE '2:00' different from 1:00}
// GB-Eire {
//   LETTER 'BDST' not single character,
//   LETTER 'BST' not single character,
//   LETTER 'GMT' not single character,
//   SAVE '2:00' different from 1:00,
// }
// Germany {SAVE '2:00' different from 1:00}
// Guam {
//   AT '0:01' not multiple of :15 min,
//   AT '2:01' not multiple of :15 min,
// }
// LH {SAVE '0:30' different from 1:00}
// Louisville {AT '0:01' not multiple of :15 min}
// Moncton {AT '0:01' not multiple of :15 min}
// Morocco {SAVE '-1:00' is a negative DST}
// NBorneo {SAVE '0:20' different from 1:00}
// NZ {SAVE '0:30' different from 1:00}
// Namibia {
//   LETTER 'CAT' not single character,
//   LETTER 'WAT' not single character,
//   SAVE '-1:00' is a negative DST,
// }
// Palestine {AT '0:01' not multiple of :15 min}
// Port {SAVE '2:00' different from 1:00}
// Russia {
//   LETTER '+05' not single character,
//   LETTER 'MDST' not single character,
//   LETTER 'MMT' not single character,
//   LETTER 'MSD' not single character,
//   LETTER 'MSK' not single character,
//   LETTER 'MST' not single character,
//   SAVE '2:00' different from 1:00,
// }
// SovietZone {SAVE '2:00' different from 1:00}
// Spain {SAVE '2:00' different from 1:00}
// StJohns {
//   AT '0:01' not multiple of :15 min,
//   LETTER 'DD' not single character,
//   SAVE '2:00' different from 1:00,
// }
// Troll {
//   LETTER '+00' not single character,
//   LETTER '+02' not single character,
//   SAVE '2:00' different from 1:00,
// }
// Uruguay {
//   SAVE '0:30' different from 1:00,
//   SAVE '1:30' different from 1:00,
// }
// Yukon {
//   LETTER 'DD' not single character,
//   SAVE '2:00' different from 1:00,
// }
// Zion {
//   LETTER 'DD' not single character,
//   SAVE '2:00' different from 1:00,
// }


//---------------------------------------------------------------------------

#ifdef __cplusplus
}
#endif

#endif
